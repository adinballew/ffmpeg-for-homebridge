#!/bin/bash

# https://github.com/markus-perl/ffmpeg-build-script

VERSION=1.8
CC=clang

if [ "$TARGET_OS" = "raspbian" ]; then
	apt-get update
 	apt-get install -y libraspberrypi-dev libomxil-bellagio-dev
	EXTRA_FLAGS="--enable-omx-rpi --enable-mmal"
fi

if [[ ("$(uname -m)" == "arm64") && ("$OSTYPE" == "darwin"*) ]]; then
  # If arm64 AND darwin (macOS)
  export ARCH=arm64
  MACOS_M1=true
fi

# Speed up the process
# Env Var NUMJOBS overrides automatic detection
if [[ -n $NUMJOBS ]]; then
    MJOBS=$NUMJOBS
elif [[ -f /proc/cpuinfo ]]; then
    MJOBS=$(grep -c processor /proc/cpuinfo)
elif [[ "$OSTYPE" == "darwin"* ]]; then
	MJOBS=$(sysctl -n machdep.cpu.thread_count)
	ADDITIONAL_CONFIGURE_OPTIONS="--enable-videotoolbox"
else
    MJOBS=4
fi

make_dir () {
	if [ ! -d $1 ]; then
		if ! mkdir $1; then
			printf "\n Failed to create dir %s" "$1";
			exit 1
		fi
	fi
}

remove_dir () {
	if [ -d $1 ]; then
		rm -r "$1"
	fi
}

execute () {
	echo "$ $*"

	OUTPUT=$("$@" 2>&1)

	if [ $? -ne 0 ]; then
        echo "$OUTPUT"
        echo ""
        echo "Failed to Execute $*" >&2
        exit 1
    fi
}


command_exists() {
    if ! [[ -x $(command -v "$1") ]]; then
        return 1
    fi

    return 0
}

build "ffmpeg"
download "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2" "ffmpeg-${FFMPEG_VERSION}.tar.bz2"
cd $PACKAGES/ffmpeg-"${FFMPEG_VERSION}"/ || exit
./configure --prefix="${WORKSPACE}" \
    --pkg-config-flags="--static" \
    --extra-cflags="-I$WORKSPACE/include" \
    --extra-ldflags="-L$WORKSPACE/lib" \
    --extra-libs="-lpthread -lm" \
    --toolchain=hardened \
    --disable-stripping \
    --disable-filter=resample \
    --enable-cuvid \
    --enable-ladspa \
    --enable-libass \
    --enable-libbluray \
    --enable-libbs2b \
    --enable-libcaca \
    --enable-libcdio \
    --enable-libcodec2 \
    --enable-libflite \
    --enable-libfontconfig \
    --enable-libfreetype \
    --enable-libfribidi \
    --enable-libgme \
    --enable-libgsm \
    --enable-libjack \
    --enable-libmysofa \
    --enable-libnpp \
    --enable-libopenjpeg \
    --enable-libopenmpt \
    --enable-libpulse \
    --enable-librsvg \
    --enable-librubberband \
    --enable-libshine \
    --enable-libsnappy \
    --enable-libsoxr \
    --enable-libssh \
    --enable-libtwolame \
    --enable-libvidstab \
    --enable-libwebp \
    --enable-libx265 \
    --enable-libxml2 \
    --enable-libxvid \
    --enable-libzmq \
    --enable-libzvbi \
    --enable-lv2 \
    --enable-nvenc \
    --enable-omx \
    --enable-openal \
    --enable-opencl \
    --enable-opengl \
    --enable-sdl2 \
    --enable-static \
    --disable-debug \
    --disable-shared \
    --disable-ffplay \
    --disable-doc \
    --enable-openssl \
    --enable-gpl \
    --enable-version3 \
    --enable-nonfree \
    --enable-pthreads \
    --enable-libvpx \
    --enable-libmp3lame \
    --enable-libopus \
    --enable-libtheora \
    --enable-libvorbis \
    --enable-libx264 \
    --enable-runtime-cpudetect \
    --enable-libfdk-aac \
    --enable-avfilter \
    --enable-libopencore_amrwb \
    --enable-libopencore_amrnb \
    --enable-filters \
    --enable-decoder=h264 \
    --enable-network \
    --enable-protocol=tcp \
    --enable-libspeex \
    --enable-demuxer=rtsp $EXTRA_FLAGS

execute make -j $MJOBS
execute make install

cd $PACKAGES && rm -rvf ${PACKAGES}/ffmpeg-${FFMPEG_VERSION}.tar.gz ${PACKAGES}/ffmpeg-${FFMPEG_VERSION}

echo "PATH='/usr/local/ffmpeg-nvidia/bin:$PATH'" >> ${PACKAGES}/.bashrc

INSTALL_FOLDER="/usr/bin"

if [[ "$OSTYPE" == "darwin"* ]]; then
INSTALL_FOLDER="/usr/local/bin"
fi

echo ""
echo "Building done. The binary can be found here: $WORKSPACE/bin/ffmpeg"
echo ""


if command_exists "sudo"; then
  sudo cp "$WORKSPACE/bin/ffmpeg" "$INSTALL_FOLDER/ffmpeg"
  sudo cp "$WORKSPACE/bin/ffprobe" "$INSTALL_FOLDER/ffprobe"
  echo "Done. ffmpeg is now installed to your system"
fi

exit 0
